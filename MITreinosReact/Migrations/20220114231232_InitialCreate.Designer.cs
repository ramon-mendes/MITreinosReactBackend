// <auto-generated />
using System;
using MITreinosReact.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MITreinosReact.Migrations
{
    [DbContext(typeof(MIContext))]
    [Migration("20220114231232_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("MITreinosReact.Models.CourseLessonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModuleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("URLhash")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoPath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("CourseLessons");
                });

            modelBuilder.Entity("MITreinosReact.Models.CourseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DateBased")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PaymentBased")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBased = false,
                            LogoURL = "https://storagemvc.blob.core.windows.net/videos/pro4-23.jpg",
                            PaymentBased = false,
                            Slug = "ie-homens",
                            Title = "IE Homens"
                        },
                        new
                        {
                            Id = 2,
                            DateBased = false,
                            LogoURL = "https://storagemvc.blob.core.windows.net/videos/pro4-23.jpg",
                            PaymentBased = false,
                            Slug = "ie-mulheres",
                            Title = "IE Mulheres"
                        });
                });

            modelBuilder.Entity("MITreinosReact.Models.CourseModuleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseModules");
                });

            modelBuilder.Entity("MITreinosReact.Models.CoursePageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JsName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CoursePageModel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            JsName = "filmes",
                            Order = 1,
                            Slug = "filmes",
                            Title = "Filmes"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            JsName = "filmes",
                            Order = 1,
                            Slug = "filmes",
                            Title = "Filmes"
                        });
                });

            modelBuilder.Entity("MITreinosReact.Models.UserCourseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentLessonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JsonMeta")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CurrentLessonId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCourse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            JsonMeta = "{ 'show_accept': true }",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            JsonMeta = "{ 'show_accept': true }",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MITreinosReact.Models.UserLessonWatchModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtWatched")
                        .HasColumnType("TEXT");

                    b.Property<int>("LessonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stars")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("UserWatchs");
                });

            modelBuilder.Entity("MITreinosReact.Models.UserManagerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PWD")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UserManagers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test@test.com",
                            Name = "Ramon",
                            PWD = "123456"
                        });
                });

            modelBuilder.Entity("MITreinosReact.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PWD")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test@test.com",
                            Name = "Ramon",
                            PWD = "123456"
                        });
                });

            modelBuilder.Entity("MITreinosReact.Models.CourseLessonModel", b =>
                {
                    b.HasOne("MITreinosReact.Models.CourseModuleModel", "Module")
                        .WithMany("Lessons")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("MITreinosReact.Models.CourseModuleModel", b =>
                {
                    b.HasOne("MITreinosReact.Models.CourseModel", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MITreinosReact.Models.CoursePageModel", b =>
                {
                    b.HasOne("MITreinosReact.Models.CourseModel", "Course")
                        .WithMany("Pages")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MITreinosReact.Models.UserCourseModel", b =>
                {
                    b.HasOne("MITreinosReact.Models.CourseModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MITreinosReact.Models.CourseLessonModel", "CurrentLesson")
                        .WithMany()
                        .HasForeignKey("CurrentLessonId");

                    b.HasOne("MITreinosReact.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CurrentLesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MITreinosReact.Models.UserLessonWatchModel", b =>
                {
                    b.HasOne("MITreinosReact.Models.CourseLessonModel", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MITreinosReact.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MITreinosReact.Models.CourseModel", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("Pages");
                });

            modelBuilder.Entity("MITreinosReact.Models.CourseModuleModel", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
